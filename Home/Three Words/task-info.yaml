type: checkiO
files:
- name: mission.py
  visible: true
  text: "def checkio(words: str) -> bool:\n    words = words.split(\" \")\n    i =\
    \ 0\n    for word in words:\n        if word.isalpha():\n            i += 1\n\
    \        else:\n            i = 0\n        if i == 3:\n            return True\n\
    \    return False\n\n#These \"asserts\" using only for self-checking and not necessary\
    \ for auto-testing\nif __name__ == '__main__':\n    print('Example:')\n    print(checkio(\"\
    Hello World hello\"))\n    \n    assert checkio(\"Hello World hello\") == True,\
    \ \"Hello\"\n    assert checkio(\"He is 123 man\") == False, \"123 man\"\n   \
    \ assert checkio(\"1 2 3 4\") == False, \"Digits\"\n    assert checkio(\"bla bla\
    \ bla bla\") == True, \"Bla Bla\"\n    assert checkio(\"Hi\") == False, \"Hi\"\
    \n    print(\"Coding complete? Click 'Check' to review your tests and earn cool\
    \ rewards!\")\n"
  learner_created: false
status: Solved
code: "def checkio(words: str) -> bool:\n    words = words.split(\" \")\n    i = 0\n\
  \    for word in words:\n        if word.isalpha():\n            i += 1\n      \
  \  else:\n            i = 0\n        if i == 3:\n            return True\n    return\
  \ False\n\n#These \"asserts\" using only for self-checking and not necessary for\
  \ auto-testing\nif __name__ == '__main__':\n    print('Example:')\n    print(checkio(\"\
  Hello World hello\"))\n    \n    assert checkio(\"Hello World hello\") == True,\
  \ \"Hello\"\n    assert checkio(\"He is 123 man\") == False, \"123 man\"\n    assert\
  \ checkio(\"1 2 3 4\") == False, \"Digits\"\n    assert checkio(\"bla bla bla bla\"\
  ) == True, \"Bla Bla\"\n    assert checkio(\"Hi\") == False, \"Hi\"\n    print(\"\
  Coding complete? Click 'Check' to review your tests and earn cool rewards!\")\n"
seconds_from_change: 1
